// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/hwameistor/datastore/pkg/apis/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// BaseModels returns a BaseModelInformer.
	BaseModels() BaseModelInformer
	// Checkpoints returns a CheckpointInformer.
	Checkpoints() CheckpointInformer
	// DataLoadRequests returns a DataLoadRequestInformer.
	DataLoadRequests() DataLoadRequestInformer
	// DataSets returns a DataSetInformer.
	DataSets() DataSetInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// BaseModels returns a BaseModelInformer.
func (v *version) BaseModels() BaseModelInformer {
	return &baseModelInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Checkpoints returns a CheckpointInformer.
func (v *version) Checkpoints() CheckpointInformer {
	return &checkpointInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DataLoadRequests returns a DataLoadRequestInformer.
func (v *version) DataLoadRequests() DataLoadRequestInformer {
	return &dataLoadRequestInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DataSets returns a DataSetInformer.
func (v *version) DataSets() DataSetInformer {
	return &dataSetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
