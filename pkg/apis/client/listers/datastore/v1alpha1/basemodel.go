// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/hwameistor/datastore/pkg/apis/datastore/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BaseModelLister helps list BaseModels.
type BaseModelLister interface {
	// List lists all BaseModels in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BaseModel, err error)
	// BaseModels returns an object that can list and get BaseModels.
	BaseModels(namespace string) BaseModelNamespaceLister
	BaseModelListerExpansion
}

// baseModelLister implements the BaseModelLister interface.
type baseModelLister struct {
	indexer cache.Indexer
}

// NewBaseModelLister returns a new BaseModelLister.
func NewBaseModelLister(indexer cache.Indexer) BaseModelLister {
	return &baseModelLister{indexer: indexer}
}

// List lists all BaseModels in the indexer.
func (s *baseModelLister) List(selector labels.Selector) (ret []*v1alpha1.BaseModel, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BaseModel))
	})
	return ret, err
}

// BaseModels returns an object that can list and get BaseModels.
func (s *baseModelLister) BaseModels(namespace string) BaseModelNamespaceLister {
	return baseModelNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BaseModelNamespaceLister helps list and get BaseModels.
type BaseModelNamespaceLister interface {
	// List lists all BaseModels in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BaseModel, err error)
	// Get retrieves the BaseModel from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BaseModel, error)
	BaseModelNamespaceListerExpansion
}

// baseModelNamespaceLister implements the BaseModelNamespaceLister
// interface.
type baseModelNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BaseModels in the indexer for a given namespace.
func (s baseModelNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BaseModel, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BaseModel))
	})
	return ret, err
}

// Get retrieves the BaseModel from the indexer for a given namespace and name.
func (s baseModelNamespaceLister) Get(name string) (*v1alpha1.BaseModel, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("basemodel"), name)
	}
	return obj.(*v1alpha1.BaseModel), nil
}
